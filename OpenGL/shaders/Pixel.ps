#version 330 core
out vec4 FragColor;

in vec2 TexCoords;
in vec3 Normal;
in vec3 FragPos;

uniform sampler2D texture_diffuse1;
uniform vec3 lightPos;


vec4 ambientLight(vec3 lightColor, float ambientStrength){

    vec3 ambient = ambientStrength * lightColor;

    return vec4(ambient, 1.0f);
}


void main()
{    
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);


    float ambientStrength = 1.0f;
    vec3 lightColor = vec3(1.0f, 1.0f, 1.0f);
    vec4 objectColor = texture(texture_diffuse1, TexCoords);

    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    FragColor = (ambientLight(lightColor, ambientStrength)+vec4(diffuse,1))*objectColor;
    
}